version: "3"
services:
  nifi:
    image: apache/nifi:1.11.4
    ports:
      - 8080:8080 # Unsecured HTTP Web Port
    environment:
      - NIFI_WEB_HTTP_PORT=8080
      - NIFI_CLUSTER_IS_NODE=true
      - NIFI_CLUSTER_NODE_PROTOCOL_PORT=8082
      - NIFI_ZK_CONNECT_STRING=zookeeper:2181
      - NIFI_ELECTION_MAX_WAIT=1 min
    links:
      - registry
      - broker
      - zookeeper
      - elasticsearch
    volumes:
      - ./for_nifi/conf:/opt/nifi/nifi-current/conf
      #- ./for_nifi/state:/data/nifi/nifi-current/state
      #- ./for_nifi/db:/opt/nifi/nifi-current/database_repository
      #- ./for_nifi/flowfile:/opt/nifi/nifi-current/flowfile_repository
      #- ./for_nifi/content:/opt/nifi/nifi-current/content_repository
      #- ./for_nifi/provenance:/opt/nifi/nifi-current/provenance_repository
      #- ./for_nifi/logs:/opt/nifi/nifi-current/logs
  zookeeper: #https://github.com/confluentinc/cp-all-in-one/blob/5.5.0-post/cp-all-in-one/docker-compose.yml#L5
    image: confluentinc/cp-zookeeper:5.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
  broker:
    image: confluentinc/cp-kafka:5.5.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  registry:
    hostname: registry
    #image: apache/nifi-registry:0.6.0
    # https://github.com/michalklempa/docker-nifi-registry/blob/1cc1970b480c9568d1b5691359cac070ac51b257/docker-compose.github.yml
    image: michalklempa/nifi-registry:0.6.0-default
    container_name: registry
    environment:
      #DEBUG: 1
      FLOW_PROVIDER: git
      #GIT_REMOTE_URL: git@github.com:michalklempa/docker-nifi-registry-example-flow.git
      #GIT_CHECKOUT_BRANCH: example
      FLOW_PROVIDER_GIT_FLOW_STORAGE_DIRECTORY: /opt/nifi-registry/flow-storage-git
      #FLOW_PROVIDER_GIT_REMOTE_TO_PUSH: origin
      #GIT_CONFIG_USER_NAME: 'Michal Klempa'
      #GIT_CONFIG_USER_EMAIL: michal.klempa@gmail.com
    volumes:
      #- ./for_registry/registry/:/opt/registry:ro
      #- ./extensions:/opt/nifi/nifi-current/extensions
      - ./flow_storage:/opt/nifi-registry/flow-storage-git
      #- ./conf_nifi-registry/providers.xml:/opt/nifi-registry/nifi-registry-0.6.0/conf/providers.xml
    ports:
      - 18080:18080
  connect:
    image: confluentinc/cp-kafka-connect:5.5.0
    hostname: connect
    container_name: connect
    depends_on:
      - zookeeper
      - broker
      - schema-registry
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # CLASSPATH required due to CC-2422
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-5.5.0.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.1
    container_name: elasticsearch
    hostname: elasticsearch
    environment:
      - "discovery.type=single-node"
      - ELASTICSEARCH_USERNAME=admin
      - ELASTICSEARCH_PASSWORD=admin
      - xpack.security.enabled=false
    ports:
      - 9200:9200
      - 9300:9300
    links: 
      - broker
  kibana:
    image: docker.elastic.co/kibana/kibana:7.7.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL="http://elasticsearch:9200"
      - ELASTICSEARCH_USERNAME=admin
      - ELASTICSEARCH_PASSWORD=admin
      - xpack.security.enabled=false
    ports:
      - 5601:5601
    links:
      - elasticsearch
    #volumes:
    #  - ./for_kibana/:/usr/share/kibana/config/kibana.yml
  # pulsar:
  #   image: apachepulsar/pulsar:2.5.2
  #   ports:
  #     - 6650:6650
  #     - 8080:8080
  #   volumes:
  #     - ./for_pulsar/data:/pulsar/data
  #     - ./for_pulsar/pulsarconf:/pulsar/conf
  #   command: bin/pulsar standalone
  # jobmanager:
  #   image: flink:1.10.1-scala_2.12
  #   expose:
  #     - "6123"
  #   ports:
  #     - "8082:8081"
  #   command: jobmanager
  #   environment:
  #     - JOB_MANAGER_RPC_ADDRESS=jobmanager

  # taskmanager:
  #   image: flink:1.10.1-scala_2.12
  #   expose:
  #     - "6121"
  #     - "6122"
  #   depends_on:
  #     - jobmanager
  #   command: taskmanager
  #   links:
  #     - "jobmanager:jobmanager"
  #     - broker
  #   environment:
  #     - JOB_MANAGER_RPC_ADDRESS=jobmanager